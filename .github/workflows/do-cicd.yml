name: KAFJisho API Deployment

on:
  push:
    branches:
      - digitalocean-cicd

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: asia-southeast1
  REPO_NAME: kafjisho-api

jobs:
  build-and-deploy:
    name: Setup, Build, and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Authenticate with Google Cloud
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      # Setup gcloud CLI/SDK
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Authorize Docker push
        run: gcloud auth configure-docker asia-southeast1-docker.pkg.dev

      - name: Build and tag the docker image
        run: |-
          docker build . --tag asia-southeast1-docker.pkg.dev/$PROJECT_ID/kafjisho/$REPO_NAME:develop \
          --build-arg DATABASE_URL=${{ secrets.DATABASE_URL }} \
          --build-arg PORT=${{ vars.PORT }} \
          --build-arg CORS_ORIGINS=${{ vars.CORS_ORIGINS }}

      - name: Push the image to the Google Container Registry (GCR)
        run: |-
          docker push asia-southeast1-docker.pkg.dev/$PROJECT_ID/kafjisho/$REPO_NAME:develop

      - name: Deploy to DigitalOcean Droplet via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          port: 22
          script: |-

            gcloud auth configure-docker asia-southeast1-docker.pkg.dev

            # Pull the Docker image from Artifact Registry
            docker pull \
                  asia-southeast1-docker.pkg.dev/$PROJECT_ID/kafjisho/$REPO_NAME:develop

            # Stop and remove the current container if it's running
            docker stop kafjisho-api || true
            docker rm kafjisho-api || true

            # Run the new container
            docker run -d --name kafjisho-api \
              -p 80:${{ vars.PORT }} \
              -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
              -e PORT=${{ vars.PORT }} \
              -e CORS_ORIGINS=${{ vars.CORS_ORIGINS }} \
              asia-docker.pkg.dev/$PROJECT_ID/$REPO_NAME:$GITHUB_SHA
